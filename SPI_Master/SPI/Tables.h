#ifndef TABLES_H_
#define TABLES_H_

#include <avr/pgmspace.h>
#include <stdint.h>

#define MAX_TABLE_SIZE 360
#define SUM_TABLES 3

//						 ---=== Инфа ===---				//
// Допустим у нас 3 регистра.							//
// Программа передачи инфы на регистры написана так,	//
// что на последний в цепочке регистр инфа передается	//
// первой затем на предпоследний, затем на первый		//
// Принимать к вниманию при построению таблиц или		//
// при проектированию плати устройства					//

const uint8_t Table1[] PROGMEM = {
	1,1,1,
	3,3,3,
	7,7,7,
	15,15,15,
	31,31,31,
	63,63,63,
	127,127,127,
	255,255,255,
	127,127,127,
	63,63,63,
	31,31,31,
	15,15,15,
	7,7,7,
	3,3,3,
	1,1,1
};

const uint8_t Table2[] PROGMEM = {
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000100, 0b00001100, 0b00011000,
	0b00000000, 0b00001100, 0b00000000,
	0b00000100, 0b00001100, 0b00001000,
	0b00000110, 0b00001100, 0b00011000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000100, 0b00001100, 0b00001000,
	0b00000100, 0b00001100, 0b00001000,
	0b00000100, 0b00011100, 0b00001000,
	0b00000110, 0b00111110, 0b00111000,
	0b00000111, 0b10000000, 0b01111000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000100, 0b00000000, 0b00011000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000100, 0b00000000, 0b00000000,
	0b00000110, 0b00000000, 0b00000000,
	0b00000111, 0b10000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000100, 0b00000000, 0b00011000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000100, 0b00000000, 0b00000000,
	0b00000100, 0b00000000, 0b00000000,
	0b00000111, 0b10000000, 0b00000000,
	0b00000011, 0b10000000, 0b00000000,
	0b00000000, 0b01111111, 0b10000000,
	0b00000001, 0b11111111, 0b11100000,
	0b00000111, 0b10000000, 0b01110000,
	0b00000110, 0b00000000, 0b00011000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000110, 0b00000000, 0b00011000,
	0b00000111, 0b00000000, 0b00111000,
	0b00000011, 0b11111111, 0b11110000,
	0b00000000, 0b11111111, 0b11000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00011000,
	0b00000000, 0b00000001, 0b11111000,
	0b00000000, 0b00011111, 0b11111000,
	0b00000111, 0b11111111, 0b00001000,
	0b00000111, 0b11100000, 0b00000000,
	0b00000000, 0b01111110, 0b01111000,
	0b00000000, 0b00001111, 0b11111000,
	0b00000000, 0b11111111, 0b10011000,
	0b00000111, 0b11110000, 0b00000000,
	0b00000011, 0b11111100, 0b00000000,
	0b00000000, 0b00011111, 0b11111000,
	0b00000000, 0b00000000, 0b11111000,
	0b00000000, 0b00000000, 0b00011000,
	0b00000000, 0b01111111, 0b10000000,
	0b00000001, 0b11111111, 0b11100000,
	0b00000111, 0b10000000, 0b01110000,
	0b00000110, 0b00000000, 0b00011000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000110, 0b00000000, 0b00011000,
	0b00000111, 0b00000000, 0b01111000,
	0b00000011, 0b11111111, 0b11100000,
	0b00000000, 0b11111111, 0b11000000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000110, 0b00000000, 0b00011000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000111, 0b10001101, 0b11011000,
	0b00000100, 0b00011100, 0b00001000,
	0b00000000, 0b11111110, 0b00011000,
	0b00000011, 0b11100111, 0b11111000,
	0b00000111, 0b10000011, 0b11110000,
	0b00000110, 0b00000000, 0b00000000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000100, 0b00000000, 0b00011000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000100, 0b00000000, 0b00000000,
	0b00000100, 0b00000000, 0b00000000,
	0b00000111, 0b10000000, 0b00000000,
	0b00000001, 0b10000000, 0b00001000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000111, 0b11111111, 0b11111000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000100, 0b00000000, 0b00001000,
	0b00000110, 0b00000000, 0b00011000,
	0b00000111, 0b00000000, 0b00111000,
	0b00000011, 0b11111111, 0b11110000,
	0b00000000, 0b11111111, 0b11100000,
	0b00000000, 0b00011110, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000110, 0b11111111, 0b11111000,
	0b00000110, 0b01111111, 0b11111000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000110, 0b11111111, 0b11111000,
	0b00000110, 0b00001111, 0b11111000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000110, 0b00000000, 0b11110000,
	0b00000110, 0b11111111, 0b11111000,
	0b00000110, 0b00000000, 0b11110000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000,
	0b00000000, 0b00000000, 0b00000000
};

const uint8_t Table3[] PROGMEM = {
	1,0,0,
	3,0,0,
	7,0,0,
	15,0,0,
	31,0,0,
	63,0,0,
	127,0,0,
	255,0,0,
	255,1,0,
	255,3,0,
	255,7,0,
	255,15,0,
	255,31,0,
	255,63,0,
	255,127,0,
	255,255,0,
	255,255,1,
	255,255,3,
	255,255,7,
	255,255,15,
	255,255,31,
	255,255,63,
	255,255,127,
	255,255,255,
	255,255,127,
	255,255,63,
	255,255,31,
	255,255,15,
	255,255,15,
	255,255,7,
	255,255,3,
	255,255,1,
	255,255,0,
	255,127,0,
	255,63,0,
	255,31,0,
	255,15,0,
	255,7,0,
	255,3,0,
	255,1,0,
	255,0,0,
	127,0,0,
	63,0,0,
	31,0,0,
	15,0,0,
	7,0,0,
	3,0,0,
	1,0,0,
	0,0,0	
};

#endif /* TABLES_H_ */